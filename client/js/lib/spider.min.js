window.spider=function(){var executeOnReady=document.currentScript.getAttribute("data-execute"),registry={};function build(path){var module=registry[path],require=function(relativePath){return registry[resolvePath(module.parentDirectory+relativePath)].exports};module.exports=module.constructor(require)}function define(constructor){var src=document.currentScript.src,path=src.slice(window.location.origin.length,src.lastIndexOf(".")),parentDirectory=path.slice(0,path.lastIndexOf("/")+1),dependencies=getDependencies(parentDirectory,constructor);if(!(path in registry)){registry[path]={importedBy:[],ready:false}}registry[path].constructor=constructor;registry[path].dependencies=dependencies;registry[path].parentDirectory=parentDirectory;for(var i=0;i<dependencies.length;i++){if(!(dependencies[i]in registry)){registry[dependencies[i]]={importedBy:[],ready:false};load(dependencies[i])}registry[dependencies[i]].importedBy.push(path)}propagateReadiness(path)}function getDependencies(parentDirectory,constructor){var match,dependencies=[],constructorString=constructor.toString(),regex=/require\('([\.\w\/]*)'\)/g;while(match=regex.exec(constructorString)){dependencies.push(resolvePath(parentDirectory+match[1]))}return dependencies}function isReady(path){var dependencies=registry[path].dependencies;for(var i=0;i<dependencies.length;i++){if(!registry[dependencies[i]].ready){return false}}return true}function load(path){var script=document.createElement("script");script.src=(path[0]==="/"?window.location.origin:"")+path+".js";script.addEventListener("load",function(){script.parentNode.removeChild(script)});document.body.appendChild(script)}function propagateReadiness(path){var module=registry[path];module.ready=isReady(path);if(module.ready){build(path);for(var i=0;i<module.importedBy.length;i++){propagateReadiness(module.importedBy[i])}}}function resolvePath(path){var dirs=path.split("/"),i=0;while(i<dirs.length){switch(dirs[i]){case"":if(i===0||i===dirs.length-1){i++;break}case".":dirs.splice(i,1);break;case"..":dirs.splice(i-1,2);i-=1;break;default:i++;break}}return dirs.join("/")}load(executeOnReady);return{define:define}}();
